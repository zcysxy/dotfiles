var E=Object.create;var u=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var A=Object.getPrototypeOf,O=Object.prototype.hasOwnProperty;var d=e=>u(e,"__esModule",{value:!0});var D=(e,n)=>{for(var t in n)u(e,t,{get:n[t],enumerable:!0})},f=(e,n,t,a)=>{if(n&&typeof n=="object"||typeof n=="function")for(let i of V(n))!O.call(e,i)&&(t||i!=="default")&&u(e,i,{get:()=>n[i],enumerable:!(a=w(n,i))||a.enumerable});return e},m=(e,n)=>f(d(u(e!=null?E(A(e)):{},"default",!n&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),F=(e=>(n,t)=>e&&e.get(n)||(t=f(d({}),n,1),e&&e.set(n,t),t))(typeof WeakMap!="undefined"?new WeakMap:0);var M={};D(M,{default:()=>v});var r=require("@raycast/api");var s=require("@raycast/api"),p=m(require("fs")),c=m(require("path")),h=require("fs/promises"),y=require("os"),o=require("react");var l=require("@raycast/api");function S(e,n){let t=[];return e=e.filter(a=>{let i=a.path+"/.obsidian/community-plugins.json";if(!p.default.existsSync(i))t.push(a);else{if(JSON.parse(p.default.readFileSync(i,"utf-8")).includes(n))return a;t.push(a)}}),[e,t]}function N(e){let n=e.split(c.default.sep).filter(t=>{if(t!="")return t}).pop();return n||"Default Vault Name (check your path preferences)"}function g(){return(0,s.getPreferenceValues)().vaultPath.split(",").filter(t=>t.trim()!=="").map(t=>({name:N(t.trim()),key:t.trim(),path:t.trim()}))}async function L(){let e=c.default.resolve(`${(0,y.homedir)()}/Library/Application Support/obsidian/obsidian.json`);try{let n=JSON.parse(await(0,h.readFile)(e,"utf8"));return Object.values(n.vaults).map(({path:t})=>({name:N(t),key:t,path:t}))}catch{return[]}}function P(){let e=(0,o.useMemo)(()=>(0,s.getPreferenceValues)(),[]),[n,t]=(0,o.useState)(e.vaultPath?{ready:!0,vaults:g()}:{ready:!1,vaults:[]});return(0,o.useEffect)(()=>{n.ready||L().then(a=>{t({vaults:a,ready:!0})}).catch(()=>t({vaults:g(),ready:!0}))},[]),n}var x=require("@raycast/api");function b(){return _jsx(x.Detail,{markdown:`# No vaults found

 Please use Obsidian to create a vault, or set a vault path in the extension's preferences before using this command.`})}var T=e=>"obsidian://advanced-uri?vault="+encodeURIComponent(e)+"&daily=true";function v(){let{vaults:e,ready:n}=P();if(n){if(e.length===0)return _jsx(b,null)}else return _jsx(r.List,{isLoading:!0});let[t,a]=S(e,"obsidian-advanced-uri");return a.length>0&&(0,r.showToast)({title:"Vaults without Daily Note plugin:",message:a.map(i=>i.name).join(", "),style:r.Toast.Style.Failure}),t.length==0?_jsx(r.Detail,{navigationTitle:"Advanced URI plugin not installed",markdown:`# Advanced URI plugin not installed.
This command requires the [Advanced URI plugin](https://obsidian.md/plugins?id=obsidian-advanced-uri) for Obsidian.  
  
 Install it through the community plugins list.`}):(t.length==1&&((0,r.open)(T(t[0].name)),(0,r.popToRoot)(),(0,r.closeMainWindow)()),_jsx(r.List,{isLoading:t===void 0},t?.map(i=>_jsx(r.List.Item,{title:i.name,key:i.key,actions:_jsx(r.ActionPanel,null,_jsx(r.Action.Open,{title:"Daily Note",target:T(i.name)}))}))))}module.exports=F(M);0&&(module.exports={});
